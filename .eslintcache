[{"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App.tsx":"1","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\index.tsx":"2","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\reportWebVitals.ts":"3","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\ListCharacters\\screen\\index.tsx":"4","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\ApiMarvel.tsx":"5","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\ListCharacters\\components\\ElementList\\index.tsx":"6","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\Loading\\index.tsx":"7","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\character\\characterMarvel.tsx":"8","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\routes\\index.tsx":"9","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\reducers\\Loading.tsx":"10","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\types.tsx":"11","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\index.tsx":"12","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsCharacter\\index.tsx":"13","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\functions\\index.tsx":"14","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\MainDiv\\index.tsx":"15","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\BodyDetails\\index.tsx":"16","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\DataLine\\index.tsx":"17","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\styles\\theme.ts":"18","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\ListAux\\index.tsx":"19","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\comic\\comicMarvel.tsx":"20","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsComic\\index.tsx":"21","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\MainDivAux\\index.tsx":"22","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsSerie\\index.tsx":"23","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsStorie\\index.tsx":"24","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\creator\\creatorMavel.tsx":"25","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsCreator\\index.tsx":"26","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\event\\eventMarvel.tsx":"27","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsEvent\\index.tsx":"28","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\ImageDetails\\index.tsx":"29","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\serie\\serieMarvel.tsx":"30","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\storie\\storieMarvel.tsx":"31"},{"size":1036,"mtime":1612068327051,"results":"32","hashOfConfig":"33"},{"size":500,"mtime":1611345997867,"results":"34","hashOfConfig":"33"},{"size":425,"mtime":1611345997867,"results":"35","hashOfConfig":"33"},{"size":1945,"mtime":1612111181151,"results":"36","hashOfConfig":"33"},{"size":676,"mtime":1612013435762,"results":"37","hashOfConfig":"33"},{"size":1263,"mtime":1612068397460,"results":"38","hashOfConfig":"33"},{"size":505,"mtime":1612068348117,"results":"39","hashOfConfig":"33"},{"size":2760,"mtime":1612073159351,"results":"40","hashOfConfig":"33"},{"size":605,"mtime":1612109464973,"results":"41","hashOfConfig":"33"},{"size":453,"mtime":1612063059206,"results":"42","hashOfConfig":"33"},{"size":43,"mtime":1612061197410,"results":"43","hashOfConfig":"33"},{"size":235,"mtime":1612061833760,"results":"44","hashOfConfig":"33"},{"size":3457,"mtime":1612111606222,"results":"45","hashOfConfig":"33"},{"size":600,"mtime":1612068904821,"results":"46","hashOfConfig":"33"},{"size":818,"mtime":1612073977828,"results":"47","hashOfConfig":"33"},{"size":798,"mtime":1612107444634,"results":"48","hashOfConfig":"33"},{"size":601,"mtime":1612107391757,"results":"49","hashOfConfig":"33"},{"size":452,"mtime":1612013709927,"results":"50","hashOfConfig":"33"},{"size":2392,"mtime":1612109575822,"results":"51","hashOfConfig":"33"},{"size":3078,"mtime":1612110229064,"results":"52","hashOfConfig":"33"},{"size":3375,"mtime":1612111215958,"results":"53","hashOfConfig":"33"},{"size":212,"mtime":1612106486819,"results":"54","hashOfConfig":"33"},{"size":3582,"mtime":1612111978754,"results":"55","hashOfConfig":"33"},{"size":3620,"mtime":1612112408886,"results":"56","hashOfConfig":"33"},{"size":2670,"mtime":1612110750260,"results":"57","hashOfConfig":"33"},{"size":3323,"mtime":1612111442105,"results":"58","hashOfConfig":"33"},{"size":3206,"mtime":1612111653083,"results":"59","hashOfConfig":"33"},{"size":3592,"mtime":1612111607758,"results":"60","hashOfConfig":"33"},{"size":822,"mtime":1612111808841,"results":"61","hashOfConfig":"33"},{"size":3214,"mtime":1612111942644,"results":"62","hashOfConfig":"33"},{"size":2933,"mtime":1612112146364,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10tl5na",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\index.tsx",[],["140","141"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\reportWebVitals.ts",[],["142","143"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\ListCharacters\\screen\\index.tsx",["144"],"import React, { useEffect, useState } from \"react\";\r\nimport { getListCharacters } from \"../../../services/requests/character/characterMarvel\";\r\nimport ElementList from \"../components/ElementList\";\r\nimport { Character } from \"../../../types/character\";\r\nimport styled from \"styled-components\";\r\nimport FlatList from \"flatlist-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../../redux/types\";\r\nimport MainDiv from \"../../../shared/components/MainDiv\";\r\nimport { getId, getWindowDimensions } from \"../../../shared/functions\";\r\nimport Title from \"../../../shared/components/Title\";\r\n\r\nconst List = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst ListPersonagens = () => {\r\n  const dispatch = useDispatch();\r\n  const [characters, setCharacters] = useState<Character[]>([]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    getListCharacters()\r\n      .then((list) => {\r\n        setCharacters(list);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Ocorreu um erro ao carregar os personagens\");\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: types.SET_LOADING, payload: false });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainDiv\r\n        minHeight={getWindowDimensions().height}\r\n        marginBottom={30}\r\n        marginTop={0}\r\n        marginLeft={30}\r\n        marginRight={30}\r\n      >\r\n        <Title fontSize={40}>Personagens</Title>\r\n\r\n        <List>\r\n          <FlatList\r\n            list={characters}\r\n            renderItem={(item: Character, index: string) => (\r\n              <ElementList\r\n                key={index}\r\n                name={item.name}\r\n                image={item.image}\r\n                id={getId(item.resourceURI)}\r\n              />\r\n            )}\r\n            renderWhenEmpty={() => <div>Lista vazia</div>}\r\n            displayGrid\r\n          />\r\n        </List>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPersonagens;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\ApiMarvel.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\ListCharacters\\components\\ElementList\\index.tsx",[],["145","146"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\Loading\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\character\\characterMarvel.tsx",["147","148","149","150","151"],"import { apiMarvel } from \"../../ApiMarvel\";\r\nimport { Character } from \"../../../types/character\";\r\nimport { Comic } from \"../../../types/comic\";\r\nimport { Serie } from \"../../../types/serie\";\r\nimport { Storie } from \"../../../types/storie\";\r\nimport { Event } from \"../../../types/event\";\r\n\r\nexport const getListCharacters = async () => {\r\n  return await getCharacters()\r\n    .then((list) => {\r\n      return list;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nexport const getCharacter = async (idUrl: string) => {\r\n  return await getCharacters(idUrl)\r\n    .then((list) => {\r\n      return list && list.length > 0 ? list[0] : null;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nconst getCharacters = async (idUrl?: string) => {\r\n  const characters: Character[] = [];\r\n  await apiMarvel\r\n    .get(\r\n      idUrl\r\n        ? \"http://gateway.marvel.com/v1/public/characters/\" + idUrl\r\n        : \"https://gateway.marvel.com/v1/public/characters\"\r\n    )\r\n    .then((result: any) => {\r\n      if (result) {\r\n        result = result.data.data.results;\r\n        result.map((character: any) => {\r\n          const comicsAux = character.comics.items;\r\n          const comics: Comic[] = [];\r\n          comicsAux.map((comic: any) => {\r\n            comics.push({ name: comic.name, resourceURI: comic.resourceURI });\r\n          });\r\n\r\n          const seriesAux = character.series.items;\r\n          const series: Serie[] = [];\r\n          seriesAux.map((serie: any) => {\r\n            series.push({ name: serie.name, resourceURI: serie.resourceURI });\r\n          });\r\n\r\n          const storiesAux = character.stories.items;\r\n          const stories: Storie[] = [];\r\n          storiesAux.map((storie: any) => {\r\n            stories.push({\r\n              name: storie.name,\r\n              resourceURI: storie.resourceURI,\r\n            });\r\n          });\r\n\r\n          const eventsAux = character.events.items;\r\n          const events: Event[] = [];\r\n          eventsAux.map((event: any) => {\r\n            events.push({ name: event.name, resourceURI: event.resourceURI });\r\n          });\r\n\r\n          const image =\r\n            character.thumbnail.path +\r\n            \"/portrait_incredible.\" +\r\n            character.thumbnail.extension;\r\n\r\n          characters.push({\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description,\r\n            image: image,\r\n            comics: comics,\r\n            series: series,\r\n            stories: stories,\r\n            events: events,\r\n            resourceURI: character.resourceURI,\r\n          });\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n\r\n  return characters;\r\n};\r\n",["152","153"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\routes\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\reducers\\Loading.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\types.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\redux\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsCharacter\\index.tsx",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport { getCharacter } from \"../../services/requests/character/characterMarvel\";\r\nimport { Character } from \"../../types/character\";\r\nimport MainDiv from \"../../shared/components/MainDiv\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport { getWindowDimensions, isMobile } from \"../../shared/functions\";\r\nimport MainDivAux from \"../../shared/components/MainDivAux\";\r\nimport { Image, ImageDiv } from \"../../shared/components/ImageDetails\";\r\nimport BodyDetails from \"../../shared/components/BodyDetails\";\r\nimport DataLine from \"../../shared/components/DataLine\";\r\nimport ListAux from \"../../shared/components/ListAux\";\r\nimport Title from \"../../shared/components/Title\";\r\n\r\ninterface Props {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst DetailsCharacter = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [character, setCharacter] = useState<Character>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    if (props.match?.params?.id) {\r\n      getCharacter(props.match?.params?.id)\r\n        .then((character) => {\r\n          if (character) {\r\n            setCharacter(character);\r\n          } else {\r\n            errorLoadData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          errorLoadData();\r\n        })\r\n        .finally(() => {\r\n          dispatch({ type: types.SET_LOADING, payload: false });\r\n        });\r\n    } else {\r\n      errorLoadData();\r\n    }\r\n  }, []);\r\n\r\n  const errorLoadData = () => {\r\n    alert(\"Ocorreu um error ao carregar o personagem\");\r\n    dispatch({ type: types.SET_LOADING, payload: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainDiv>\r\n        <MainDivAux flexDirection={isMobile() ? \"column\" : \"row\"}>\r\n          {character && (\r\n            <>\r\n              <ImageDiv\r\n                height={\r\n                  isMobile()\r\n                    ? \"500px\"\r\n                    : getWindowDimensions().height - 40 + \"px\"\r\n                }\r\n                width={isMobile() ? \"100%\" : \"50%\"}\r\n                marginTop={isMobile() ? 0 : 20}\r\n                marginLeft={isMobile() ? 0 : 30}\r\n              >\r\n                <Image isMobile={isMobile()} src={character.image} />\r\n              </ImageDiv>\r\n              <BodyDetails\r\n                width={isMobile() ? undefined : \"50%\"}\r\n                height={\r\n                  isMobile()\r\n                    ? undefined\r\n                    : getWindowDimensions().height - 60 + \"px\"\r\n                }\r\n                marginTop={isMobile() ? 20 : 40}\r\n                marginHorizontal={20}\r\n                shadow={isMobile() ? false : true}\r\n              >\r\n                <Title>Detalhes do Personagem</Title>\r\n                <DataLine title={\"Id\"} text={character.id} />\r\n                <DataLine title={\"Nome\"} text={character.name} />\r\n                <DataLine title={\"Descrição\"} text={character.description} />\r\n                <ListAux title={\"Quadrinhos\"} list={character.comics} />\r\n                <ListAux title={\"Séries\"} list={character.series} />\r\n                <ListAux title={\"Histórias\"} list={character.stories} />\r\n                <ListAux title={\"Eventos\"} list={character.events} />\r\n              </BodyDetails>\r\n            </>\r\n          )}\r\n        </MainDivAux>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsCharacter;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\functions\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\MainDiv\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\BodyDetails\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\DataLine\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\styles\\theme.ts",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\ListAux\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\comic\\comicMarvel.tsx",["155","156","157","158","159"],"import { apiMarvel } from \"../../ApiMarvel\";\r\nimport { Character } from \"../../../types/character\";\r\nimport { Comic } from \"../../../types/comic\";\r\nimport { Serie } from \"../../../types/serie\";\r\nimport { Storie } from \"../../../types/storie\";\r\nimport { Event } from \"../../../types/event\";\r\nimport { Creator } from \"../../../types/creator\";\r\n\r\nexport const getListComics = async () => {\r\n  return await getComics()\r\n    .then((list) => {\r\n      return list;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nexport const getComic = async (idUrl: string) => {\r\n  return await getComics(idUrl)\r\n    .then((list) => {\r\n      return list && list.length > 0 ? list[0] : null;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nconst getComics = async (idUrl?: string) => {\r\n  const comics: Comic[] = [];\r\n  await apiMarvel\r\n    .get(\r\n      idUrl\r\n        ? \"http://gateway.marvel.com/v1/public/comics/\" + idUrl\r\n        : \"https://gateway.marvel.com/v1/public/comics\"\r\n    )\r\n    .then((result: any) => {\r\n      if (result) {\r\n        result = result.data.data.results;\r\n        result.map((comic: any) => {\r\n          const series: Serie[] = [];\r\n          series.push({\r\n            name: comic.series.name,\r\n            resourceURI: comic.series.resourceURI,\r\n          });\r\n\r\n          const creatorsAux = comic.creators.items;\r\n          const creators: Creator[] = [];\r\n          creatorsAux.map((creator: any) => {\r\n            creators.push({\r\n              name: creator.name,\r\n              resourceURI: creator.resourceURI,\r\n            });\r\n          });\r\n\r\n          const charactersAux = comic.characters.items;\r\n          const characters: Character[] = [];\r\n          charactersAux.map((character: any) => {\r\n            characters.push({\r\n              name: character.name,\r\n              resourceURI: character.resourceURI,\r\n            });\r\n          });\r\n\r\n          const storiesAux = comic.stories.items;\r\n          const stories: Storie[] = [];\r\n          storiesAux.map((storie: any) => {\r\n            stories.push({\r\n              name: storie.name,\r\n              resourceURI: storie.resourceURI,\r\n            });\r\n          });\r\n\r\n          const eventsAux = comic.events.items;\r\n          const events: Event[] = [];\r\n          eventsAux.map((event: any) => {\r\n            events.push({ name: event.name, resourceURI: event.resourceURI });\r\n          });\r\n\r\n          const image =\r\n            comic.thumbnail.path +\r\n            \"/portrait_incredible.\" +\r\n            comic.thumbnail.extension;\r\n\r\n          comics.push({\r\n            id: comic.id,\r\n            name: comic.title,\r\n            description: comic.description,\r\n            image: image,\r\n            series: series,\r\n            creators: creators,\r\n            characters: characters,\r\n            stories: stories,\r\n            events: events,\r\n            resourceURI: comic.resourceURI,\r\n          });\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n\r\n  return comics;\r\n};\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsComic\\index.tsx",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport MainDiv from \"../../shared/components/MainDiv\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport { getWindowDimensions, isMobile } from \"../../shared/functions\";\r\nimport MainDivAux from \"../../shared/components/MainDivAux\";\r\nimport { Image, ImageDiv } from \"../../shared/components/ImageDetails\";\r\nimport BodyDetails from \"../../shared/components/BodyDetails\";\r\nimport DataLine from \"../../shared/components/DataLine\";\r\nimport ListAux from \"../../shared/components/ListAux\";\r\nimport { getComic } from \"../../services/requests/comic/comicMarvel\";\r\nimport { Comic } from \"../../types/comic\";\r\nimport Title from \"../../shared/components/Title\";\r\n\r\ninterface Props {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst DetailsComic = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [comic, setComic] = useState<Comic>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    if (props.match?.params?.id) {\r\n      getComic(props.match?.params?.id)\r\n        .then((comic) => {\r\n          if (comic) {\r\n            setComic(comic);\r\n          } else {\r\n            errorLoadData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          errorLoadData();\r\n        })\r\n        .finally(() => {\r\n          dispatch({ type: types.SET_LOADING, payload: false });\r\n        });\r\n    } else {\r\n      errorLoadData();\r\n    }\r\n  }, []);\r\n\r\n  const errorLoadData = () => {\r\n    alert(\"Ocorreu um error ao carregar o quadrinho\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainDiv>\r\n        <MainDivAux flexDirection={isMobile() ? \"column\" : \"row\"}>\r\n          {comic && (\r\n            <>\r\n              <ImageDiv\r\n                height={\r\n                  isMobile()\r\n                    ? \"500px\"\r\n                    : getWindowDimensions().height - 40 + \"px\"\r\n                }\r\n                width={isMobile() ? \"100%\" : \"50%\"}\r\n                marginTop={isMobile() ? 0 : 20}\r\n                marginLeft={isMobile() ? 0 : 30}\r\n              >\r\n                <Image isMobile={isMobile()} src={comic.image} />\r\n              </ImageDiv>\r\n              <BodyDetails\r\n                width={isMobile() ? undefined : \"50%\"}\r\n                height={\r\n                  isMobile()\r\n                    ? undefined\r\n                    : getWindowDimensions().height - 60 + \"px\"\r\n                }\r\n                marginTop={isMobile() ? 20 : 40}\r\n                marginHorizontal={20}\r\n                shadow={isMobile() ? false : true}\r\n              >\r\n                <Title>Detalhes do Quadrinho</Title>\r\n                <DataLine title={\"Id\"} text={comic.id} />\r\n                <DataLine title={\"Nome\"} text={comic.name} />\r\n                <DataLine title={\"Descrição\"} text={comic.description} />\r\n                <ListAux title={\"Séries\"} list={comic.series} />\r\n                <ListAux title={\"Criadores\"} list={comic.creators} />\r\n                <ListAux title={\"Personagens\"} list={comic.characters} />\r\n                <ListAux title={\"Histórias\"} list={comic.stories} />\r\n                <ListAux title={\"Eventos\"} list={comic.events} />\r\n              </BodyDetails>\r\n            </>\r\n          )}\r\n        </MainDivAux>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsComic;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\MainDivAux\\index.tsx",[],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsSerie\\index.tsx",["161"],"import React, { useState, useEffect } from \"react\";\r\nimport MainDiv from \"../../shared/components/MainDiv\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport { getWindowDimensions, isMobile } from \"../../shared/functions\";\r\nimport MainDivAux from \"../../shared/components/MainDivAux\";\r\nimport { Image, ImageDiv } from \"../../shared/components/ImageDetails\";\r\nimport BodyDetails from \"../../shared/components/BodyDetails\";\r\nimport DataLine from \"../../shared/components/DataLine\";\r\nimport ListAux from \"../../shared/components/ListAux\";\r\nimport { getSerie } from \"../../services/requests/serie/serieMarvel\";\r\nimport { Serie } from \"../../types/serie\";\r\nimport Title from \"../../shared/components/Title\";\r\n\r\ninterface Props {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst DetailsSerie = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [serie, setSerie] = useState<Serie>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    if (props.match?.params?.id) {\r\n      getSerie(props.match?.params?.id)\r\n        .then((serie) => {\r\n          if (serie) {\r\n            setSerie(serie);\r\n          } else {\r\n            errorLoadData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          errorLoadData();\r\n        })\r\n        .finally(() => {\r\n          dispatch({ type: types.SET_LOADING, payload: false });\r\n        });\r\n    } else {\r\n      errorLoadData();\r\n    }\r\n  }, []);\r\n\r\n  const errorLoadData = () => {\r\n    alert(\"Ocorreu um error ao carregar a série\");\r\n    dispatch({ type: types.SET_LOADING, payload: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainDiv>\r\n        <MainDivAux flexDirection={isMobile() ? \"column\" : \"row\"}>\r\n          {serie && (\r\n            <>\r\n              <ImageDiv\r\n                height={\r\n                  isMobile()\r\n                    ? \"500px\"\r\n                    : getWindowDimensions().height - 40 + \"px\"\r\n                }\r\n                width={isMobile() ? \"100%\" : \"50%\"}\r\n                marginTop={isMobile() ? 0 : 20}\r\n                marginLeft={isMobile() ? 0 : 30}\r\n              >\r\n                <Image isMobile={isMobile()} src={serie.image} />\r\n              </ImageDiv>\r\n              <BodyDetails\r\n                width={isMobile() ? undefined : \"50%\"}\r\n                height={\r\n                  isMobile()\r\n                    ? undefined\r\n                    : getWindowDimensions().height - 60 + \"px\"\r\n                }\r\n                marginTop={isMobile() ? 20 : 40}\r\n                marginHorizontal={20}\r\n                shadow={isMobile() ? false : true}\r\n              >\r\n                <Title>Detalhes da Série</Title>\r\n                <DataLine title={\"Id\"} text={serie.id} />\r\n                <DataLine title={\"Nome\"} text={serie.name} />\r\n                <DataLine title={\"Descrição\"} text={serie.description} />\r\n                <DataLine title={\"Ano de início\"} text={serie.startYear} />\r\n                <DataLine title={\"Ano de fim\"} text={serie.endYear} />\r\n                <ListAux title={\"Criadores\"} list={serie.creators} />\r\n                <ListAux title={\"Personagens\"} list={serie.characters} />\r\n                <ListAux title={\"Histórias\"} list={serie.stories} />\r\n                <ListAux title={\"Quadrinhos\"} list={serie.comics} />\r\n                <ListAux title={\"Eventos\"} list={serie.events} />\r\n              </BodyDetails>\r\n            </>\r\n          )}\r\n        </MainDivAux>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsSerie;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsStorie\\index.tsx",["162"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\creator\\creatorMavel.tsx",["163","164","165","166","167"],"import { apiMarvel } from \"../../ApiMarvel\";\r\nimport { Comic } from \"../../../types/comic\";\r\nimport { Serie } from \"../../../types/serie\";\r\nimport { Storie } from \"../../../types/storie\";\r\nimport { Event } from \"../../../types/event\";\r\nimport { Creator } from \"../../../types/creator\";\r\n\r\nexport const getListCreators = async () => {\r\n  return await getCreators()\r\n    .then((list) => {\r\n      return list;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nexport const getCreator = async (idUrl: string) => {\r\n  return await getCreators(idUrl)\r\n    .then((list) => {\r\n      return list && list.length > 0 ? list[0] : null;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nconst getCreators = async (idUrl?: string) => {\r\n  const creators: Creator[] = [];\r\n  await apiMarvel\r\n    .get(\r\n      idUrl\r\n        ? \"https://gateway.marvel.com/v1/public/creators/\" + idUrl\r\n        : \"https://gateway.marvel.com/v1/public/creators\"\r\n    )\r\n    .then((result: any) => {\r\n      if (result) {\r\n        result = result.data.data.results;\r\n        result.map((creator: any) => {\r\n          const comicsAux = creator.comics.items;\r\n          const comics: Comic[] = [];\r\n          comicsAux.map((comic: any) => {\r\n            comics.push({ name: comic.name, resourceURI: comic.resourceURI });\r\n          });\r\n\r\n          const seriesAux = creator.series.items;\r\n          const series: Serie[] = [];\r\n          seriesAux.map((serie: any) => {\r\n            series.push({ name: serie.name, resourceURI: serie.resourceURI });\r\n          });\r\n\r\n          const storiesAux = creator.stories.items;\r\n          const stories: Storie[] = [];\r\n          storiesAux.map((storie: any) => {\r\n            stories.push({\r\n              name: storie.name,\r\n              resourceURI: storie.resourceURI,\r\n            });\r\n          });\r\n\r\n          const eventsAux = creator.events.items;\r\n          const events: Event[] = [];\r\n          eventsAux.map((event: any) => {\r\n            events.push({ name: event.name, resourceURI: event.resourceURI });\r\n          });\r\n\r\n          const image =\r\n            creator.thumbnail.path +\r\n            \"/portrait_incredible.\" +\r\n            creator.thumbnail.extension;\r\n\r\n          creators.push({\r\n            id: creator.id,\r\n            name: creator.fullName,\r\n            image: image,\r\n            comics: comics,\r\n            series: series,\r\n            stories: stories,\r\n            events: events,\r\n            resourceURI: creator.resourceURI,\r\n          });\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n\r\n  return creators;\r\n};\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsCreator\\index.tsx",["168"],"import React, { useState, useEffect } from \"react\";\r\nimport MainDiv from \"../../shared/components/MainDiv\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport { getWindowDimensions, isMobile } from \"../../shared/functions\";\r\nimport MainDivAux from \"../../shared/components/MainDivAux\";\r\nimport { Image, ImageDiv } from \"../../shared/components/ImageDetails\";\r\nimport BodyDetails from \"../../shared/components/BodyDetails\";\r\nimport DataLine from \"../../shared/components/DataLine\";\r\nimport ListAux from \"../../shared/components/ListAux\";\r\nimport { getCreator } from \"../../services/requests/creator/creatorMavel\";\r\nimport { Creator } from \"../../types/creator\";\r\nimport Title from \"../../shared/components/Title\";\r\n\r\ninterface Props {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst DetailsCreator = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [creator, setCreator] = useState<Creator>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    if (props.match?.params?.id) {\r\n      getCreator(props.match?.params?.id)\r\n        .then((creator) => {\r\n          if (creator) {\r\n            setCreator(creator);\r\n          } else {\r\n            errorLoadData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          errorLoadData();\r\n        })\r\n        .finally(() => {\r\n          dispatch({ type: types.SET_LOADING, payload: false });\r\n        });\r\n    } else {\r\n      errorLoadData();\r\n    }\r\n  }, []);\r\n\r\n  const errorLoadData = () => {\r\n    alert(\"Ocorreu um error ao carregar o criador\");\r\n    dispatch({ type: types.SET_LOADING, payload: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainDiv>\r\n        <MainDivAux flexDirection={isMobile() ? \"column\" : \"row\"}>\r\n          {creator && (\r\n            <>\r\n              <ImageDiv\r\n                height={\r\n                  isMobile()\r\n                    ? \"500px\"\r\n                    : getWindowDimensions().height - 40 + \"px\"\r\n                }\r\n                width={isMobile() ? \"100%\" : \"50%\"}\r\n                marginTop={isMobile() ? 0 : 20}\r\n                marginLeft={isMobile() ? 0 : 30}\r\n              >\r\n                <Image isMobile={isMobile()} src={creator.image} />\r\n              </ImageDiv>\r\n              <BodyDetails\r\n                width={isMobile() ? undefined : \"50%\"}\r\n                height={\r\n                  isMobile()\r\n                    ? undefined\r\n                    : getWindowDimensions().height - 60 + \"px\"\r\n                }\r\n                marginTop={isMobile() ? 20 : 40}\r\n                marginHorizontal={20}\r\n                shadow={isMobile() ? false : true}\r\n              >\r\n                <Title>Detalhes do Criador</Title>\r\n                <DataLine title={\"Id\"} text={creator.id} />\r\n                <DataLine title={\"Nome\"} text={creator.name} />\r\n                <ListAux title={\"Quadrinhos\"} list={creator.comics} />\r\n                <ListAux title={\"Séries\"} list={creator.series} />\r\n                <ListAux title={\"Histórias\"} list={creator.stories} />\r\n                <ListAux title={\"Eventos\"} list={creator.events} />\r\n              </BodyDetails>\r\n            </>\r\n          )}\r\n        </MainDivAux>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsCreator;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\event\\eventMarvel.tsx",["169","170","171","172","173","174"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\components\\DetailsEvent\\index.tsx",["175"],"import React, { useState, useEffect } from \"react\";\r\nimport MainDiv from \"../../shared/components/MainDiv\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport { getWindowDimensions, isMobile } from \"../../shared/functions\";\r\nimport MainDivAux from \"../../shared/components/MainDivAux\";\r\nimport { Image, ImageDiv } from \"../../shared/components/ImageDetails\";\r\nimport BodyDetails from \"../../shared/components/BodyDetails\";\r\nimport DataLine from \"../../shared/components/DataLine\";\r\nimport ListAux from \"../../shared/components/ListAux\";\r\nimport Title from \"../../shared/components/Title\";\r\nimport { getEvent } from \"../../services/requests/event/eventMarvel\";\r\nimport { Event } from \"../../types/event\";\r\n\r\ninterface Props {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst DetailsCharacter = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [event, setEvent] = useState<Event>();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: types.SET_LOADING, payload: true });\r\n    if (props.match?.params?.id) {\r\n      getEvent(props.match?.params?.id)\r\n        .then((event) => {\r\n          if (event) {\r\n            setEvent(event);\r\n          } else {\r\n            errorLoadData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          errorLoadData();\r\n        })\r\n        .finally(() => {\r\n          dispatch({ type: types.SET_LOADING, payload: false });\r\n        });\r\n    } else {\r\n      errorLoadData();\r\n    }\r\n  }, []);\r\n\r\n  const errorLoadData = () => {\r\n    alert(\"Ocorreu um error ao carregar o evento\");\r\n    dispatch({ type: types.SET_LOADING, payload: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainDiv>\r\n        <MainDivAux flexDirection={isMobile() ? \"column\" : \"row\"}>\r\n          {event && (\r\n            <>\r\n              <ImageDiv\r\n                height={\r\n                  isMobile()\r\n                    ? \"500px\"\r\n                    : getWindowDimensions().height - 40 + \"px\"\r\n                }\r\n                width={isMobile() ? \"100%\" : \"50%\"}\r\n                marginTop={isMobile() ? 0 : 20}\r\n                marginLeft={isMobile() ? 0 : 30}\r\n              >\r\n                <Image isMobile={isMobile()} src={event.image} />\r\n              </ImageDiv>\r\n              <BodyDetails\r\n                width={isMobile() ? undefined : \"50%\"}\r\n                height={\r\n                  isMobile()\r\n                    ? undefined\r\n                    : getWindowDimensions().height - 60 + \"px\"\r\n                }\r\n                marginTop={isMobile() ? 20 : 40}\r\n                marginHorizontal={20}\r\n                shadow={isMobile() ? false : true}\r\n              >\r\n                <Title>Detalhes do Evento</Title>\r\n                <DataLine title={\"Id\"} text={event.id} />\r\n                <DataLine title={\"Nome\"} text={event.name} />\r\n                <DataLine title={\"Descrição\"} text={event.description} />\r\n                <DataLine title={\"Data de início\"} text={event.startDate} />\r\n                <DataLine title={\"Data de fim\"} text={event.endDate} />\r\n                <ListAux title={\"Criadores\"} list={event.creators} />\r\n                <ListAux title={\"Personagens\"} list={event.characters} />\r\n                <ListAux title={\"Histórias\"} list={event.stories} />\r\n                <ListAux title={\"Quadrinhos\"} list={event.comics} />\r\n                <ListAux title={\"Séries\"} list={event.series} />\r\n              </BodyDetails>\r\n            </>\r\n          )}\r\n        </MainDivAux>\r\n      </MainDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsCharacter;\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\shared\\components\\ImageDetails\\index.tsx",["176","177"],"D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\serie\\serieMarvel.tsx",["178","179","180","181","182","183"],"import { apiMarvel } from \"../../ApiMarvel\";\r\nimport { Character } from \"../../../types/character\";\r\nimport { Comic } from \"../../../types/comic\";\r\nimport { Serie } from \"../../../types/serie\";\r\nimport { Storie } from \"../../../types/storie\";\r\nimport { Event } from \"../../../types/event\";\r\nimport { Creator } from \"../../../types/creator\";\r\n\r\nexport const getListSeries = async () => {\r\n  return await getSeries()\r\n    .then((list) => {\r\n      return list;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nexport const getSerie = async (idUrl: string) => {\r\n  return await getSeries(idUrl)\r\n    .then((list) => {\r\n      return list && list.length > 0 ? list[0] : null;\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n};\r\n\r\nconst getSeries = async (idUrl?: string) => {\r\n  const series: Serie[] = [];\r\n  await apiMarvel\r\n    .get(\r\n      idUrl\r\n        ? \"https://gateway.marvel.com/v1/public/series/\" + idUrl\r\n        : \"https://gateway.marvel.com/v1/public/series\"\r\n    )\r\n    .then((result: any) => {\r\n      if (result) {\r\n        result = result.data.data.results;\r\n        result.map((serie: any) => {\r\n          const creatorsAux = serie.creators.items;\r\n          const creators: Creator[] = [];\r\n          creatorsAux.map((creator: any) => {\r\n            creators.push({\r\n              name: creator.name,\r\n              resourceURI: creator.resourceURI,\r\n            });\r\n          });\r\n\r\n          const charactersAux = serie.characters.items;\r\n          const characters: Character[] = [];\r\n          charactersAux.map((character: any) => {\r\n            characters.push({\r\n              name: character.name,\r\n              resourceURI: character.resourceURI,\r\n            });\r\n          });\r\n\r\n          const storiesAux = serie.stories.items;\r\n          const stories: Storie[] = [];\r\n          storiesAux.map((storie: any) => {\r\n            stories.push({\r\n              name: storie.name,\r\n              resourceURI: storie.resourceURI,\r\n            });\r\n          });\r\n\r\n          const comicsAux = serie.comics.items;\r\n          const comics: Comic[] = [];\r\n          comicsAux.map((comic: any) => {\r\n            comics.push({ name: comic.name, resourceURI: comic.resourceURI });\r\n          });\r\n\r\n          const eventsAux = serie.events.items;\r\n          const events: Event[] = [];\r\n          eventsAux.map((event: any) => {\r\n            events.push({ name: event.name, resourceURI: event.resourceURI });\r\n          });\r\n\r\n          const image =\r\n            serie.thumbnail.path +\r\n            \"/portrait_incredible.\" +\r\n            serie.thumbnail.extension;\r\n\r\n          series.push({\r\n            id: serie.id,\r\n            name: serie.title,\r\n            description: serie.description,\r\n            startYear: serie.startYear,\r\n            endYear: serie.endYear,\r\n            image: image,\r\n            creators: creators,\r\n            characters: characters,\r\n            comics: comics,\r\n            events: events,\r\n            stories: stories,\r\n            resourceURI: serie.resourceURI,\r\n          });\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      throw error.toString();\r\n    });\r\n\r\n  return series;\r\n};\r\n","D:\\MeusProgramas\\Projetos Pessoais Git\\Aplicação Marvel React\\1\\AplicacacaoMarvelReact\\src\\App\\services\\requests\\storie\\storieMarvel.tsx",["184","185","186","187","188","189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"190","replacedBy":"194"},{"ruleId":"192","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":33,"column":6,"nodeType":"198","endLine":33,"endColumn":8,"suggestions":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"192","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":39,"column":37,"nodeType":"204","messageId":"205","endLine":39,"endColumn":39},{"ruleId":"202","severity":1,"message":"203","line":42,"column":38,"nodeType":"204","messageId":"205","endLine":42,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":48,"column":38,"nodeType":"204","messageId":"205","endLine":48,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":54,"column":40,"nodeType":"204","messageId":"205","endLine":54,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":63,"column":38,"nodeType":"204","messageId":"205","endLine":63,"endColumn":40},{"ruleId":"190","replacedBy":"206"},{"ruleId":"192","replacedBy":"207"},{"ruleId":"196","severity":1,"message":"208","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"203","line":40,"column":33,"nodeType":"204","messageId":"205","endLine":40,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":49,"column":42,"nodeType":"204","messageId":"205","endLine":49,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":58,"column":46,"nodeType":"204","messageId":"205","endLine":58,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":67,"column":40,"nodeType":"204","messageId":"205","endLine":67,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":76,"column":38,"nodeType":"204","messageId":"205","endLine":76,"endColumn":40},{"ruleId":"196","severity":1,"message":"210","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"211"},{"ruleId":"196","severity":1,"message":"208","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"212"},{"ruleId":"196","severity":1,"message":"208","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"213"},{"ruleId":"202","severity":1,"message":"203","line":39,"column":35,"nodeType":"204","messageId":"205","endLine":39,"endColumn":37},{"ruleId":"202","severity":1,"message":"203","line":42,"column":38,"nodeType":"204","messageId":"205","endLine":42,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":48,"column":38,"nodeType":"204","messageId":"205","endLine":48,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":54,"column":40,"nodeType":"204","messageId":"205","endLine":54,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":63,"column":38,"nodeType":"204","messageId":"205","endLine":63,"endColumn":40},{"ruleId":"196","severity":1,"message":"208","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"214"},{"ruleId":"202","severity":1,"message":"203","line":40,"column":33,"nodeType":"204","messageId":"205","endLine":40,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":43,"column":42,"nodeType":"204","messageId":"205","endLine":43,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":52,"column":46,"nodeType":"204","messageId":"205","endLine":52,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":61,"column":40,"nodeType":"204","messageId":"205","endLine":61,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":70,"column":38,"nodeType":"204","messageId":"205","endLine":70,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":76,"column":38,"nodeType":"204","messageId":"205","endLine":76,"endColumn":40},{"ruleId":"196","severity":1,"message":"208","line":47,"column":6,"nodeType":"198","endLine":47,"endColumn":8,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":9,"column":14,"nodeType":"218","messageId":"219","endLine":9,"endColumn":22},{"ruleId":"216","severity":1,"message":"220","line":23,"column":14,"nodeType":"218","messageId":"219","endLine":23,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":40,"column":33,"nodeType":"204","messageId":"205","endLine":40,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":43,"column":42,"nodeType":"204","messageId":"205","endLine":43,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":52,"column":46,"nodeType":"204","messageId":"205","endLine":52,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":61,"column":40,"nodeType":"204","messageId":"205","endLine":61,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":70,"column":38,"nodeType":"204","messageId":"205","endLine":70,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":76,"column":38,"nodeType":"204","messageId":"205","endLine":76,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":40,"column":34,"nodeType":"204","messageId":"205","endLine":40,"endColumn":36},{"ruleId":"202","severity":1,"message":"203","line":43,"column":42,"nodeType":"204","messageId":"205","endLine":43,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":52,"column":46,"nodeType":"204","messageId":"205","endLine":52,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":61,"column":38,"nodeType":"204","messageId":"205","endLine":61,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":67,"column":38,"nodeType":"204","messageId":"205","endLine":67,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":73,"column":38,"nodeType":"204","messageId":"205","endLine":73,"endColumn":40},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],["221"],["222"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["223"],["221"],["222"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["221"],["222"],"React Hook useEffect has missing dependencies: 'dispatch', 'errorLoadData', and 'props.match?.params?.id'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match?.params?.id'. Either include them or remove the dependency array.",["225"],["226"],["227"],["228"],["229"],"@typescript-eslint/no-redeclare","'ImageDiv' is already defined.","Identifier","redeclared","'Image' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"232","fix":"236"},{"desc":"232","fix":"237"},{"desc":"232","fix":"238"},{"desc":"232","fix":"239"},"Update the dependencies array to be: [dispatch]",{"range":"240","text":"241"},"Update the dependencies array to be: [dispatch, errorLoadData, props.match?.params?.id]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch, props.match?.params?.id]",{"range":"244","text":"245"},{"range":"246","text":"243"},{"range":"247","text":"243"},{"range":"248","text":"243"},{"range":"249","text":"243"},[1163,1165],"[dispatch]",[1553,1555],"[dispatch, errorLoadData, props.match?.params?.id]",[1497,1499],"[dispatch, props.match?.params?.id]",[1497,1499],[1511,1513],[1524,1526],[1501,1503]]